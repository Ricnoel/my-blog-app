{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rinoel\\\\Documents\\\\Cyber Security Projects\\\\DevSecop Project\\\\Blogapp\\\\Frontend\\\\src\\\\CreatePostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Box, Container } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePostForm = ({\n  onPostCreate\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.post('http://localhost:5000/api/posts', {\n      title,\n      content\n    }).then(response => {\n      onPostCreate(response.data);\n      setTitle('');\n      setContent('');\n    }).catch(error => {\n      console.error('Error creating post:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        padding: 3,\n        boxShadow: 3,\n        borderRadius: 2,\n        backgroundColor: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          marginBottom: 2\n        },\n        textAlign: \"center\",\n        children: \"Create New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          fullWidth: true,\n          sx: {\n            marginBottom: 2\n          },\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Content\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          sx: {\n            marginBottom: 2\n          },\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePostForm, \"OTvljkGZ3oDHjpEqZRGoAyVoe2c=\");\n_c = CreatePostForm;\nexport default CreatePostForm;\nvar _c;\n$RefreshReg$(_c, \"CreatePostForm\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","Box","Container","Typography","jsxDEV","_jsxDEV","CreatePostForm","onPostCreate","_s","title","setTitle","content","setContent","handleSubmit","event","preventDefault","post","then","response","data","catch","error","console","maxWidth","children","sx","padding","boxShadow","borderRadius","backgroundColor","variant","marginBottom","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","value","onChange","e","target","fullWidth","multiline","rows","type","color","_c","$RefreshReg$"],"sources":["C:/Users/rinoel/Documents/Cyber Security Projects/DevSecop Project/Blogapp/Frontend/src/CreatePostForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, Box, Container } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nconst CreatePostForm = ({ onPostCreate }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios.post('http://localhost:5000/api/posts', { title, content })\r\n      .then((response) => {\r\n        onPostCreate(response.data);\r\n        setTitle('');\r\n        setContent('');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error creating post:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box sx={{ padding: 3, boxShadow: 3, borderRadius: 2, backgroundColor: '#fff' }}>\r\n        <Typography variant=\"h4\" sx={{ marginBottom: 2 }} textAlign=\"center\">Create New Post</Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            label=\"Title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            fullWidth\r\n            sx={{ marginBottom: 2 }}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            label=\"Content\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            sx={{ marginBottom: 2 }}\r\n            variant=\"outlined\"\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n            Create Post\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreatePostForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}